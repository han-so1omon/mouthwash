# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import mix_pb2 as mix__pb2


class MixerStub(object):
  """RPCs: frontend <-> sound analyzation service

  Analyze sound and set params for next sound
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.MixANewOne = channel.unary_unary(
        '/mouthwash.Mixer/MixANewOne',
        request_serializer=mix__pb2.ShotElement.SerializeToString,
        response_deserializer=mix__pb2.Ingredients.FromString,
        )
    self.ShotReview = channel.unary_unary(
        '/mouthwash.Mixer/ShotReview',
        request_serializer=mix__pb2.ShotReviewSummary.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class MixerServicer(object):
  """RPCs: frontend <-> sound analyzation service

  Analyze sound and set params for next sound
  """

  def MixANewOne(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShotReview(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MixerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'MixANewOne': grpc.unary_unary_rpc_method_handler(
          servicer.MixANewOne,
          request_deserializer=mix__pb2.ShotElement.FromString,
          response_serializer=mix__pb2.Ingredients.SerializeToString,
      ),
      'ShotReview': grpc.unary_unary_rpc_method_handler(
          servicer.ShotReview,
          request_deserializer=mix__pb2.ShotReviewSummary.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mouthwash.Mixer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
